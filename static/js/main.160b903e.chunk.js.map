{"version":3,"sources":["components/App/App.js","index.js"],"names":["App","Root","styled","div","StatusButtonsList","StatusButton","Title","Submit","input","TodoList","Todo","TodoInput","TodoCheckInput","CancelButton","FunctionButtonsList","FunctionButton","useState","id","status","task","todos","setTodos","nowStatus","setNowStatus","setId","onClick","type","placeholder","onKeyDown","e","key","target","value","filter","todo","map","data","ReactDOM","render","document","getElementById"],"mappings":"m4FAuMeA,MAlMf,WAEE,IAAMC,EAAOC,IAAOC,IAAV,KAQJC,EAAoBF,IAAOC,IAAV,KAMjBE,EAAeH,IAAOC,IAAV,KAaZG,EAAQJ,IAAOC,IAAV,KAMLI,EAASL,IAAOM,MAAV,KAuBNC,EAAWP,IAAOC,IAAV,KAMRO,EAAOR,IAAOC,IAAV,KAWJQ,EAAYT,IAAOM,MAAV,KAaTI,EAAiBV,IAAOM,MAAV,KAKdK,EAAeX,IAAOC,IAAV,KASZW,EAAsBZ,IAAOC,IAAV,KAOnBY,EAAiBb,IAAOC,IAAV,KA7GP,EA4Haa,mBAAS,CACjC,CACEC,GAAI,EACJC,OAAQ,cACRC,KAAM,cAER,CACEF,GAAI,EACJC,OAAQ,YACRC,KAAM,wBArIG,mBA4HNC,EA5HM,KA4HCC,EA5HD,OA0IqBL,mBAAS,OA1I9B,mBA0INM,EA1IM,KA0IKC,EA1IL,OA2IQP,mBAAS,GA3IjB,mBA2INC,EA3IM,KA2IDO,EA3IC,KA6Ib,OACE,eAACvB,EAAD,WACI,eAACG,EAAD,WACI,cAACC,EAAD,CAAcoB,QAAS,WAAOF,EAAa,QAA3C,sBACA,cAAClB,EAAD,CAAcoB,QAAS,WAAOF,EAAa,gBAA3C,yBACA,cAAClB,EAAD,CAAcoB,QAAS,WAAOF,EAAa,cAA3C,0BAEJ,cAACjB,EAAD,wBACA,cAACC,EAAD,CAAQmB,KAAK,OAAOC,YAAY,4BAC9BC,UAAW,SAACC,GACG,UAAVA,EAAEC,MACHT,EAAS,GAAD,mBAAKD,GAAL,CAAY,CAClBH,KACAC,OAAQ,cACRC,KAAMU,EAAEE,OAAOC,UAEjBR,EAAOP,EAAK,OAGlB,eAACR,EAAD,WAEe,QAAda,GAAuBF,EAAMa,QAAO,SAAAC,GAAI,MAAmB,gBAAfA,EAAKhB,QAA2C,cAAhBgB,EAAKhB,UAC/EiB,KAAI,SAAAD,GAAI,OACP,eAACxB,EAAD,WACE,cAACE,EAAD,CAAgBc,KAAK,aACrB,cAACf,EAAD,CAAWqB,MAAOE,EAAKf,OACvB,cAACN,EAAD,CAAcY,QAAU,WACtBJ,EAASD,EAAMa,QAAQ,SAAAG,GAAI,OAAIA,EAAKnB,KAAOiB,EAAKjB,QADlD,qBAMS,QAAdK,GAAuBF,EAAMa,QAAO,SAAAC,GAAI,OAAIA,EAAKhB,SAAWI,KAC1Da,KAAI,SAAAD,GAAI,OACP,eAACxB,EAAD,WACE,cAACE,EAAD,CAAgBc,KAAK,aACrB,cAACf,EAAD,CAAWqB,MAAOE,EAAKf,OACvB,cAACN,EAAD,CAAcY,QAAU,WACtBJ,EAASD,EAAMa,QAAQ,SAAAG,GAAI,OAAIA,EAAKnB,KAAOiB,EAAKjB,QADlD,wBAON,eAACH,EAAD,WACE,cAACC,EAAD,CAAgBU,QAAS,WACvBJ,EAAS,KADX,6BAGA,cAACN,EAAD,0BC9LVsB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.160b903e.chunk.js","sourcesContent":["import React, { Component, useState, useRef, useEffect, useLayoutEffect } from \"react\";\nimport \"./App.css\";\nimport styled from 'styled-components';\n\n\nfunction App() {\n\n  const Root = styled.div`\n    padding: 30px;\n    box-shadow: 0 4px 4px 0 #C8C8C8;\n    background-color: #FFF2DC;\n    margin: 10px auto;\n    width: 60%;\n  `\n\n  const StatusButtonsList = styled.div`\n      display: flex;\n      justify-content: space-between;\n      margin-bottom: 10px;\n  `\n\n  const StatusButton = styled.div`\n    padding: 0px 10px;\n    cursor: pointer;\n    /* background-color: white; */\n    color: #4A90E2;\n    border-radius: 5px;\n    transition: 0.5s;\n\n    &:hover {\n      transform: scale(1.15);\n    }\n  `\n\n  const Title = styled.div`\n    font-size: 54px;\n    color: #4A90E2;\n    text-align: center;\n    margin-bottom: 20px;\n  `\n  const Submit = styled.input`\n    margin-bottom: 30px;\n    width: 80%;\n    padding: 10px 15px;\n    left: 50%;\n    font-size: 18px;\n    transform: translate(-50%, 0);\n    border: none;\n    background-color: #FFF2DC;\n    transition-property: width;\n    width: 85%;\n    margin: 0;\n    transition: 0.5s;\n\n    &:focus {\n      outline: none;\n      border-bottom: 2px solid #4A90E2;\n      transition-property: width;\n      width: 95%;\n      transition: 0.5s;\n    }\n  `\n\n  const TodoList = styled.div`\n    top: 50%;\n    width: 100%;\n    color: #4A90E2;\n    margin-top: 30px;\n  `\n  const Todo = styled.div`\n    width: 100%;\n    padding: 10px 5px;\n    cursor: pointer;\n    display: block;\n\n    &:hover {\n      background-color: #FFFFFF;\n    }\n  `\n\n  const TodoInput = styled.input`\n    font-size: 20px;\n    border: none;\n    background-color: transparent;\n    cursor: pointer;\n    width: 80%;\n    color: #4A90E2;\n\n\n    &:focus {\n      outline: none;\n    }\n  `\n  const TodoCheckInput = styled.input`\n    color: #4A90E2;\n    border: 1px #4A90E2 solid;\n  `\n\n  const CancelButton = styled.div`\n    font-size: 30px;\n    position: absolute;\n    padding: 0px 15px;\n    right: 20px;\n    bottom: 5px;\n    cursor: pointer;\n  `\n\n  const FunctionButtonsList = styled.div`\n    margin-top: 40px;\n    display: flex;\n    justify-content: space-between;\n\n  `\n\n  const FunctionButton = styled.div`\n    padding: 1px 5px;\n    cursor: pointer;\n    color: white;\n    border-radius: 5px;\n    transition: 0.5s;\n    background-color: #DD0000;\n    border: 1px solid #DD0000;\n\n    &:hover {\n      transform: scale(1.15);\n    }\n  `\n\n\n  const [todos, setTodos] = useState([\n    { \n      id: 1,\n      status: 'in-progress',\n      task: 'basketball'\n    },\n    { \n      id: 2,\n      status: 'completed',\n      task: '曬衣服'\n    },\n\n  ])\n\n  const [nowStatus, setNowStatus] = useState(\"all\")\n  const [id , setId] = useState(3)\n\n  return (\n    <Root>\n        <StatusButtonsList>\n            <StatusButton onClick={() => {setNowStatus('all')}}>My Tasks</StatusButton>\n            <StatusButton onClick={() => {setNowStatus('in-progress')}} >In Progress</StatusButton>\n            <StatusButton onClick={() => {setNowStatus('completed')}} >Completed</StatusButton>\n        </StatusButtonsList>\n        <Title>Todo List</Title>\n        <Submit type=\"text\" placeholder=\"Add somethig to do here !\" \n          onKeyDown={(e) => {\n            if(e.key === 'Enter') {\n              setTodos([...todos, {\n                id,\n                status: 'in-progress',\n                task: e.target.value\n              }])\n              setId( id + 1)\n            }\n        }} />\n        <TodoList>\n\n        {nowStatus === 'all' && todos.filter(todo => todo.status ==='in-progress' || todo.status === 'completed')\n          .map(todo => (\n            <Todo> \n              <TodoCheckInput type=\"checkbox\"/>\n              <TodoInput value={todo.task}/>\n              <CancelButton onClick={ () => { \n                setTodos(todos.filter( data => data.id !== todo.id)) \n              } }>x</CancelButton>\n          </Todo>\n          ))}\n\n        {nowStatus !== 'all' && todos.filter(todo => todo.status === nowStatus)\n          .map(todo => (\n            <Todo>  \n              <TodoCheckInput type=\"checkbox\"/>\n              <TodoInput value={todo.task}/>\n              <CancelButton onClick={ () => { \n                setTodos(todos.filter( data => data.id !== todo.id)) \n              } }>x</CancelButton>\n          </Todo>\n          ))}\n          \n        </TodoList>\n        <FunctionButtonsList>\n          <FunctionButton onClick={()=> {\n            setTodos([])\n          }}>Clear All Tasks</FunctionButton>\n          <FunctionButton>Save</FunctionButton>\n        </FunctionButtonsList>\n      </Root>\n  )\n}\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App/App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n"],"sourceRoot":""}